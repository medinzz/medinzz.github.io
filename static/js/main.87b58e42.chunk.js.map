{"version":3,"sources":["helpers/cookie_handlers/AuthCookie.tsx","helpers/api/Request.tsx","helpers/api/mutations/Authentication.tsx","components/forms/Input.tsx","pages/Register.tsx","assets/images/icons/currency.png","helpers/cookie_handlers/UserCookie.tsx","pages/Login.tsx","pages/VerifyEmail.tsx","assets/images/icons/peoples.png","assets/images/icons/interactions.png","assets/images/icons/tutorials.png","components/Footer.tsx","pages/Home.tsx","pages/AuthenticatedHome.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TOKEN","REFRESH_TOKEN","useTokenCookie","useCookies","cookies","setCookie","removeCookie","token","parsedToken","jwt_decode","token_exp","Date","exp","expires","useRefreshTokenCookie","refreshToken","endpoint","authenticationRequestHandler","request_body","variables","a","request","LOGIN_MUTATION","gql","REGISTER_MUTATION","InputComponent","props","Form","Group","className","controlId","Label","label","Control","type","placeholder","onChange","Text","inputGuide","RegisterPage","useState","username","setUsername","email","setEmail","password","setPassword","setTokenCookie","setRefreshTokenCookie","register","creds","res","success","errors","nonFieldErrors","username_errors","email_errors","alert","message","to","Input","e","target","value","Button","variant","onClick","USER","LoginPage","user","useUserCookie","setUserCookie","login","tokenAuth","console","log","src","currency","alt","VerifyEmailPage","match","params","Footer","HomePage","id","peoples","interactions","tutorials","AuthenticatedHomePage","App","exact","path","render","AuthenticatedHome","Home","Register","Login","VerifyEmail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.87b58e42.chunk.js","sourcesContent":["import { useCookies } from 'react-cookie'\r\nimport jwt_decode from 'jwt-decode'\r\n\r\nimport { TokenPayloadInterface } from '../interfaces/Interface'\r\n\r\n\r\nconst TOKEN = \"token\"\r\nconst REFRESH_TOKEN = \"refreshToken\"\r\n\r\n/**\r\n * Token Hook\r\n * \r\n * This function returns a react hooks that needs to be declared as follows: \r\n * const [token, setTokenCookie, removeTokenCookie] = useTokenCookie()\r\n **/ \r\nexport const useTokenCookie = () => {\r\n\r\n\t// using cookies to store token\r\n\tconst [cookies, setCookie, removeCookie] = useCookies([TOKEN])\r\n\tconst setTokenCookie = (token: string) => {\r\n\t\t\r\n\t\t// decode token to get expiration\r\n\t\tlet parsedToken: TokenPayloadInterface = jwt_decode(token)\r\n\t\tlet token_exp = new Date(parsedToken.exp * 1000)\r\n\r\n\t\tsetCookie(\r\n\t\t\tTOKEN, \r\n\t\t\ttoken, {\r\n\t\t\t\texpires: token_exp\r\n\t\t\t}\r\n\t\t)\r\n\t}\r\n\tconst removeTokenCookie = () => removeCookie(TOKEN)\r\n\r\n\treturn [cookies[TOKEN], setTokenCookie, removeTokenCookie]\r\n}\r\n\r\n\r\n/**\r\n * Refresh Token Hook\r\n * \r\n * This function returns a react hooks that needs to be declared as follows: \r\n * const [refreshToken, setrefreshTokenCookie, removerefreshTokenCookie] = useRefreshTokenCookie()\r\n **/ \r\nexport const useRefreshTokenCookie = () => {\r\n\r\n\t// using cookies to store refresh token\r\n\tconst [cookies, setCookie, removeCookie] = useCookies([REFRESH_TOKEN])\r\n\tconst setRefreshTokenCookie = (refreshToken: string) => setCookie(REFRESH_TOKEN, refreshToken)\r\n\tconst removeRefreshTokenCookie = () => removeCookie(REFRESH_TOKEN)\r\n\r\n\treturn [cookies[REFRESH_TOKEN], setRefreshTokenCookie, removeRefreshTokenCookie]\r\n}\r\n","import { GraphQLClient, request } from 'graphql-request'\r\n\r\n\r\nconst endpoint = \"http://127.0.0.1:8000/graphql\"\r\n\r\n/**\r\n  * API Request Handler\r\n  * \r\n  * @param {string} token Token for authorization \r\n  * @param {string} request_body gql body for either queries or mutation\r\n  * @param {object} variables Variables that need to be passed to request_body\r\n  **/\r\nexport const requestHandler = async (token: string, request_body: string, variables?: object) => {\r\n\r\n  const graphQLClient = new GraphQLClient( endpoint, {\r\n    headers: {\r\n      authorization: 'JWT ' + token,\r\n    },\r\n  })\r\n\r\n  return await graphQLClient.request(request_body, variables)\r\n}\r\n\r\n/** \r\n  * API Authentication Handler\r\n  * @param {string} request_body The gql body for authentication mutations\r\n  * @param {object} variables Variables that need to be passed to request_body\r\n  **/\r\nexport const authenticationRequestHandler = async(request_body: string, variables: object) => {  \r\n  return await request(endpoint, request_body, variables)\r\n}","import { gql } from 'graphql-request'\r\n\r\nexport const LOGIN_MUTATION = gql`\r\nmutation login(\r\n  $email: String!\r\n  $password: String!){\r\n    tokenAuth(\r\n      email: $email\r\n      password: $password){\r\n        success,\r\n\t\t    errors,\r\n\t\t    token,\r\n\t\t    refreshToken,\r\n        user{\r\n          id\r\n          verified\r\n          firstName\r\n          lastName\r\n          isActive\r\n        }\r\n      }\r\n}`\r\n\r\nexport const REGISTER_MUTATION = gql`\r\nmutation register(\r\n  $username: String!\r\n  $email: String!\r\n  $password: String!){\r\n  register(\r\n    email: $email\r\n    username: $username\r\n    password1: $password\r\n    password2: $password){\r\n      success\r\n      token\r\n      refreshToken\t\r\n      errors\r\n    }\r\n}`\r\n\r\nexport const REFRESH_TOKEN_MUTATION = gql`\r\nmutation refreshToken($refreshToken: String!){\r\n  refreshToken(refreshToken: $refreshToken){\r\n    token\r\n    refreshToken\r\n    success\r\n    errors\r\n    payload\r\n  }\r\n}`\r\n","import React from 'react'\r\nimport { Form } from 'react-bootstrap'\r\n\r\nconst InputComponent = (props: any) => {\r\n  return (\r\n    <>\r\n    <Form.Group className=\"mb-3\" controlId={props.controlId}>\r\n      <Form.Label>{props.label}</Form.Label>\r\n      <Form.Control type={props.type} placeholder={props.placeholder} onChange={props.onChange} />\r\n      <Form.Text className=\"text-muted\">\r\n        {props.inputGuide}\r\n      </Form.Text>\r\n    </Form.Group>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default InputComponent","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useTokenCookie, useRefreshTokenCookie } from '../helpers/cookie_handlers/AuthCookie'\r\nimport { authenticationRequestHandler } from '../helpers/api/Request'\r\nimport { REGISTER_MUTATION } from '../helpers/api/mutations/Authentication'\r\nimport InputComponent from '../components/forms/Input'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\n\r\nconst RegisterPage = (props: any) => {\r\n\r\n\r\n  const [username, setUsername] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [token, setTokenCookie,] = useTokenCookie()\r\n  const [, setRefreshTokenCookie,] = useRefreshTokenCookie()\r\n\r\n  const register = async () => {\r\n    let creds = {\r\n      username: username,\r\n      email: email,\r\n      password: password\r\n    }\r\n    if (!token) {\r\n      let res = await authenticationRequestHandler(REGISTER_MUTATION, creds)\r\n      if (res.register.success) {\r\n        setTokenCookie(res.register.token)\r\n        setRefreshTokenCookie(res.register.refreshToken)\r\n      } else {\r\n        let nonFieldErrors = res.register.errors.nonFieldErrors\r\n        let username_errors = res.register.errors.username\r\n        let email_errors = res.register.errors.email\r\n        alert(username_errors[0].message)\r\n        alert(email_errors[0].message)\r\n      }\r\n\r\n    } else {\r\n      alert('you are already registered!')\r\n      return <Redirect to='/'></Redirect>\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"my-5 container-fluid\">\r\n        <div className=\"p-5 text-center row\">\r\n          <h1 className=\"home-title mx-auto col-lg-8\">\r\n            Welcome to\r\n            <br />\r\n            Crypto Media!\r\n          </h1>\r\n          <p className=\"home-subtitle mx-auto\">\r\n            Please complete the form below and verify your email afterwards.\r\n          </p>\r\n        </div>\r\n        <Form className=\"px-lg-5 px-4 p-1 mx-auto col-lg-6\">\r\n          <InputComponent\r\n            controlId=\"formBasicUsername\"\r\n            label=\"Username\"\r\n            type=\"text\"\r\n            placeholder=\"Enter username\"\r\n\r\n            /* need to set event to type \"any\"\r\n            TODO: find a way to not set it into any\r\n            */\r\n            onChange={(e: any) => setUsername(e.target.value)}\r\n            inputGuide=\"use a unique username\"\r\n          />\r\n\r\n          <InputComponent\r\n            controlId=\"formBasicEmail\"\r\n            label=\"Email address\"\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n\r\n            /* need to set event to type \"any\"\r\n            TODO: find a way to not set it into any\r\n            */\r\n            onChange={(e: any) => setEmail(e.target.value)}\r\n            inputGuide=\"We'll never share your email with anyone else.\"\r\n          />\r\n\r\n          <InputComponent\r\n            controlId=\"formBasicPassword\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter Password\"\r\n\r\n            /* need to set event to type \"any\"\r\n            TODO: find a way to not set it into any\r\n            */\r\n            onChange={(e: any) => setPassword(e.target.value)}\r\n            inputGuide=\"Use a strong password, I haven't made any strong authentication yet.\"\r\n          />\r\n\r\n          <div className=\"row\">\r\n            <Link to=\"/login\" className=\"btn btn-light col-6\">Sign in</Link>\r\n\r\n            <Button variant=\"primary\" className=\"col-6\" onClick={register}>\r\n              register\r\n            </Button>\r\n          </div>\r\n\r\n        </Form>\r\n      </div>\r\n    </>)\r\n}\r\n\r\nexport default RegisterPage","export default __webpack_public_path__ + \"static/media/currency.806feea3.png\";","import {useCookies} from 'react-cookie'\r\nimport {UserObjInterface} from '../interfaces/Interface'\r\n\r\n\r\nconst USER = 'user'\r\n\r\n/**\r\n * User Hook\r\n * \r\n * This function returns a react hooks that needs to be declared as follows: \r\n * const [user, setUserCookie, removeUserCookie] = useUserCookie()\r\n **/ \r\nexport const useUserCookie = () => {\r\n\r\n\t// using cookies to store user\r\n\tconst [cookies, setCookie, removeCookie] = useCookies([USER])\r\n\tconst setUserCookie = (user: UserObjInterface) => setCookie(USER, user)\r\n\tconst removeUserCookie = () => removeCookie(USER)\r\n\t\r\n\treturn [cookies[USER], setUserCookie, removeUserCookie]\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport currency from '../assets/images/icons/currency.png'\r\nimport { LOGIN_MUTATION } from '../helpers/api/mutations/Authentication'\r\nimport { authenticationRequestHandler } from '../helpers/api/Request'\r\nimport { useTokenCookie, useRefreshTokenCookie } from '../helpers/cookie_handlers/AuthCookie'\r\nimport { useUserCookie } from '../helpers/cookie_handlers/UserCookie'\r\nimport InputComponent from '../components/forms/Input'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst LoginPage = (props: any) => {\r\n\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [user, setUserCookie,] = useUserCookie()\r\n  const [token, setTokenCookie,] = useTokenCookie()\r\n  const [, setRefreshTokenCookie,] = useRefreshTokenCookie()\r\n\r\n  const login = async () => {\r\n    let creds = {\r\n      email: email,\r\n      password: password\r\n    }\r\n    if (!token) {\r\n      let res = await authenticationRequestHandler(LOGIN_MUTATION, creds)\r\n      if (res.tokenAuth.success) {\r\n        setTokenCookie(res.tokenAuth.token)\r\n        setRefreshTokenCookie(res.tokenAuth.refreshToken)\r\n        setUserCookie(res.tokenAuth.user)\r\n      } else {\r\n        let nonFieldErrors = res.tokenAuth.errors.nonFieldErrors\r\n        alert(nonFieldErrors[0].message)\r\n      }\r\n\r\n    } else {\r\n      alert('you are already logged in!')\r\n      console.log(user)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <section>\r\n        <div className=\"container-fluid\">\r\n          <div className=\"my-5 row\">\r\n            <Form className=\"p-lg-5 mt-5 mx-auto col-lg-6\">\r\n              <div className=\"text-center row\">\r\n                <h1 className=\"home-title mx-auto\">\r\n                  Crypto Media\r\n                </h1>\r\n                <p className=\"home-subtitle mx-auto\">\r\n                  Your next generation social media\r\n                </p>\r\n              </div>\r\n              <div className=\"p-5\">\r\n                <InputComponent\r\n                  controlId=\"formBasicEmail\"\r\n                  label=\"Email address\"\r\n                  type=\"email\"\r\n                  placeholder=\"Enter email\"\r\n\r\n                  /* need to set event to type \"any\"\r\n                  TODO: find a way to not set it into any\r\n                  */\r\n                  onChange={(e: any) => setEmail(e.target.value)}\r\n                  inputGuide=\"We'll never share your email with anyone else.\"\r\n                />\r\n                <InputComponent\r\n                  controlId=\"formBasicPassword\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  placeholder=\"Enter Password\"\r\n\r\n                  /* need to set event to type \"any\"\r\n                  TODO: find a way to not set it into any\r\n                  */\r\n                  onChange={(e: any) => setPassword(e.target.value)}\r\n                  inputGuide=\"You should never share your password.\"\r\n                />\r\n\r\n                {/* \r\n                Use this if you want to have show password functionality\r\n\r\n\r\n                  <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                  </Form.Group> \r\n                */}\r\n                <div className=\"row\">\r\n                  <Link to=\"/register\" className=\"btn btn-light col-6\">Sign up</Link>\r\n                  <Button variant=\"primary\" className=\"col-6\" onClick={login}>\r\n                    login\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n            <div className=\"col-lg-6 mt-5\">\r\n              <div className=\"py-5 row w-100\">\r\n                <img className=\"mx-auto w-50\" src={currency} alt=\"currency.png\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginPage","import React from 'react'\r\n\r\nconst VerifyEmailPage = (props: any) => {\r\n  const verify_token = props.match.params.token\r\n  \r\n  return (\r\n    <>\r\n      <p>test</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VerifyEmailPage","export default __webpack_public_path__ + \"static/media/peoples.b04bab6c.png\";","export default __webpack_public_path__ + \"static/media/interactions.d726a261.png\";","export default __webpack_public_path__ + \"static/media/tutorials.0cf9c5f4.png\";","import React from 'react'\r\n\r\nconst Footer = (props: any) => {\r\n  return(<>\r\n  <footer>\r\n    <div className=\"container-fluid text-center my-5 px-5\">\r\n      <h4>\r\n        © 2021 Crypto Media. All rights reserved.\r\n      </h4>\r\n    </div>\r\n  </footer>\r\n  </>)\r\n} \r\n\r\nexport default Footer","import peoples from '../assets/images/icons/peoples.png'\r\nimport interactions from '../assets/images/icons/interactions.png'\r\nimport tutorials from '../assets/images/icons/tutorials.png'\r\nimport Footer from '../components/Footer'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <section id=\"main\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"row my-5\">\r\n            <div className=\"col-lg-6 p-5 text-center\">\r\n              <h1 className=\"home-title pt-5\">\r\n                Welcome to \r\n                <br /> \r\n                Crypto Media!\r\n              </h1>\r\n              \r\n            </div>\r\n            <div className=\"col-lg-6 d-flex justify-content-center p-5 \">\r\n              <img className=\"w-100 h-auto p-5\" src={peoples} alt=\"currency.png\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"row bg-primary p-5 h-50 my-5\">\r\n            <div className=\"my-5\"></div>\r\n            <div className=\"text-center col-lg-6 col-md-8 col-sm-10 mx-auto\">\r\n              <p className=\"text-light home-subtitle\">\r\n              A combination of social media platform integrated with the latest news about cryptocurrency would help our generation to adopt the new era of secure transactions. Do you want to be part of this platform?  \r\n              </p>\r\n            </div>\r\n            <div className=\"my-5 row\">\r\n              <div className=\"col-md-6 mx-auto text-center\">\r\n                  <Link to=\"/register\" className=\"btn btn-outline-light btn-lg\">Sign Up now!</Link>\r\n                  \r\n              </div>\r\n            </div>\r\n            <div className=\"my-5\"></div>\r\n          </div>\r\n          <div className=\"mb-5\">\r\n            <div className=\"row p-5\">\r\n              <div className=\"col-lg-6 p-5\">\r\n                <h1 className=\"home-title text-center\">\r\n                  Interact with people\r\n                </h1>\r\n              </div>\r\n              <div className=\"col-lg-6 d-flex justify-content-center p-5\">\r\n                <img className=\"w-75 h-auto\" src={interactions} alt=\"interactions.png\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"row p-5 bg-primary\">\r\n              <div className=\"col-lg-6 d-flex justify-content-center p-5\">\r\n                <img className=\"w-75 h-auto\" src={tutorials} alt=\"tutorials.png\" />\r\n              </div>\r\n              <div className=\"col-lg-6 p-lg-5\">\r\n                <h1 className=\"home-title text-center text-light\">\r\n                  Understand the Crypto\r\n                </h1>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage","const AuthenticatedHomePage = () => {\r\n  return (<>\r\n    Hi User!\r\n  </>)\r\n}\r\n\r\nexport default AuthenticatedHomePage","import { Route, Switch,Redirect } from 'react-router-dom'\r\nimport { useTokenCookie, useRefreshTokenCookie } from './helpers/cookie_handlers/AuthCookie'\r\n\r\nimport RegisterPage from './pages/Register'\r\nimport LoginPage from './pages/Login'\r\nimport VerifyEmailPage from './pages/VerifyEmail'\r\nimport HomePage from './pages/Home'\r\nimport AuthenticatedHomePage from './pages/AuthenticatedHome'\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [refreshToken ,,] = useRefreshTokenCookie()\r\n\r\n  return (\r\n    \r\n      /**\r\n       * Render is used when the certain conditions are met\r\n       **/\r\n\r\n    <Switch>\r\n      <Route exact path=\"/\" render={() => (\r\n        refreshToken ? \r\n        (<AuthenticatedHomePage />):\r\n        ( <HomePage />)\r\n      )} />\r\n\r\n      <Route path=\"/register\" render={\r\n        () => (\r\n        refreshToken ? \r\n        (<Redirect to=\"/\"/>) :\r\n        (<RegisterPage />)\r\n      )} />\r\n\r\n      <Route path=\"/login\" render={\r\n        () => (\r\n        refreshToken ? \r\n        (<Redirect to=\"/\"/>) :\r\n        (<LoginPage />)\r\n      )} />\r\n\r\n      <Route path=\"/verify/:token\" render={(props) => <VerifyEmailPage {...props} />}>\r\n      </Route>\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default App","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\n\r\nimport './assets/vendor/bootstrap/bootstrap.min.css'\r\nimport './assets/css/text.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>\r\n</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}